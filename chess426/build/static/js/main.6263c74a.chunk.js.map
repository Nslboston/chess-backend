{"version":3,"sources":["logo.svg","variables/domain.js","variables/socket.js","components/ChessboardHandler.js","components/Leaderboard.js","components/LoginPage.js","components/ProfilePage.js","components/QueuePage.js","components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["domain","socket","io","withCredentials","ChessboardHandler","opponent","side","userInfo","gameInfo","prevTime","onlineGame","useState","board","setBoard","Chess","game","setGame","white","black","time","setTime","endMessage","setEndMessage","makeRandomMove","possibleMoves","moves","game_over","randomInd","Math","floor","random","length","move","fen","updateGameMessagesLocal","useEffect","interval","setInterval","curTime","Date","now","console","log","turn","newTime","updateTime","on","res","newGame","load_pgn","pgn","whiteTime","blackTime","in_check","nextMove","myMove","concat","msg","clearInterval","setTimeout","winner","username","elo","loser","removeAllListeners","recMove","a","axios","method","url","headers","data","result","makeMove","substring","sourceSquare","targetSquare","moveObj","from","to","promotion","message","id","emit","newEndMessage","undefined","getMinSec","mills","toISOString","substr","className","onSquareClick","square","transitionDuration","position","onDrop","orientation","loggedIn","onClick","Fragment","Leaderboard","leaders","setLeaders","getLeaders","then","title","sort","b","map","user","index","wins","losses","draws","LoginPage","info","setInfo","setUsername","password","setPassword","type","placeholder","onChange","event","target","value","ProfilePage","profile","setProfile","getProfile","JSON","stringify","stats","QueuePage","name","disp","setDisp","response","status","Homepage","href","App","setUserInfo","logOut","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6263c74a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const domain = \"https://immense-savannah-41501.herokuapp.com\"\r\n//\"http://localhost:8000\";","import {domain} from \"./domain\";\r\nimport io from \"socket.io-client\";\r\nexport const socket = io(`${domain}`, {withCredentials: true});\r\n","import * as Chess from \"../../node_modules/chess.js/chess\"\r\nimport React, {useState, useEffect} from 'react';\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport {socket} from \"../variables/socket.js\"\r\nimport {domain} from \"../variables/domain\";\r\n//Server sends game info with game id to send back,\r\nexport default function ChessboardHandler({opponent, side, userInfo, gameInfo}) {\r\n    function handleClick(square) {\r\n        console.log(square);\r\n    };\r\n    let onlineGame = (opponent) => (opponent != \"AI (3000)\" && opponent != \"Random (0)\" && opponent != \"\");\r\n\r\n    const [board, setBoard] = useState(\"start\");\r\n    let [game, setGame] = useState(new Chess());\r\n    let [time, setTime] = useState({white: (1000*60*5), black: (1000*60*5)});\r\n    let [endMessage, setEndMessage] = useState(\"\")\r\n    let prevTime;\r\n    //let [squareStyle, setSquareStyle] = useState({});\r\n    let callServer = async function() {\r\n        try {\r\n            const result = await axios({\r\n                method: \"get\",\r\n                url: `${domain}/api`\r\n            })\r\n            //console.log(result.data.message);\r\n        }\r\n        catch (err) {\r\n            console.log(`The error is ${err}`);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //callServer().then();\r\n        //goAgain();\r\n        //Don't mess with the server if the opponent is not another player\r\n\r\n        if (onlineGame(opponent)) {\r\n            let interval = setInterval(() => {updateTime()}, 100);\r\n            prevTime = Date.now();\r\n            console.log(\"this works at least\");\r\n            //Res has {pgn, whiteTime, blackTime}\r\n            socket.on(\"chess response\", (res) => {\r\n                console.log(\"Response received\");\r\n                console.log(`${res}`);\r\n                let newGame = new Chess();\r\n                newGame.load_pgn(res.pgn);\r\n                time = {white: res.whiteTime, black: res.blackTime};\r\n                setTime({white: res.whiteTime, black: res.blackTime});\r\n                setBoard(newGame.fen())\r\n                game = newGame;\r\n                setGame(newGame);\r\n                if (game.in_check()) {\r\n                    let nextMove = (myMove()) ? \"You are\" : `${opponent} is`;\r\n                    endMessage = endMessage.concat(`${nextMove} in check!\\n`)\r\n                    setEndMessage(endMessage)\r\n                }\r\n                else {\r\n                    setEndMessage(\"\");\r\n                }\r\n            })\r\n            socket.on(\"game over\", (msg) => {\r\n                clearInterval(interval);\r\n                setTimeout(() => {\r\n                    if (msg.winner == \"draw\") {\r\n                        //alert(\"Draw! No one wins!\")\r\n                        endMessage = endMessage.concat(\"Draw! No one wins!\")\r\n                        setEndMessage(endMessage);\r\n                    }\r\n                    else {\r\n                        //alert(`Game Over! ${msg.winner} wins!`);\r\n                        endMessage = endMessage.concat(`Game Over! ${msg.winner} wins!`)\r\n                        setEndMessage(endMessage);\r\n                    }\r\n                }, 100);\r\n\r\n            });\r\n            socket.on(\"elo message\", (msg) => {\r\n                setTimeout(() => {\r\n                    endMessage = endMessage.concat(`\\n${msg.winner.username} now has elo ${msg.winner.elo} and ${msg.loser.username} now has elo ${msg.loser.elo}`)\r\n                    setEndMessage(endMessage);\r\n                }, 200);\r\n\r\n                //alert(`${msg.winner.username} now has elo ${msg.winner.elo} and\r\n                //${msg.loser.username} now has elo ${msg.loser.elo}`);\r\n            })\r\n\r\n\r\n            return function() {\r\n                socket.removeAllListeners(\"chess response\");\r\n                socket.removeAllListeners(\"game over\");\r\n                socket.removeAllListeners(\"elo message\");\r\n                clearInterval(interval);\r\n                //socket.disconnect();\r\n\r\n            }\r\n        }\r\n    }, [])\r\n    function makeRandomMove() {\r\n        let possibleMoves = game.moves();\r\n        if (game.game_over()) {\r\n            return;\r\n        }\r\n        let randomInd = Math.floor(Math.random()     * possibleMoves.length);\r\n        game.move(possibleMoves[randomInd]);\r\n        //setGame(game);\r\n        setBoard(game.fen());\r\n        updateGameMessagesLocal();\r\n\r\n        //goAgain();\r\n    }\r\n    function goAgain() {\r\n        setTimeout(makeRandomMove, 1000);\r\n    }\r\n    let recMove = async function() {\r\n        try {\r\n            const result = await axios({\r\n                method: \"post\",\r\n                url: \"https://chess.apurn.com/nextmove\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain\"\r\n                },\r\n                data: game.fen()\r\n            })\r\n            console.log(result);\r\n            makeMove(result.data.substring(0,2), result.data.substring(2,4));\r\n        }\r\n        catch (err) {\r\n            console.log(\"Whoops!\");\r\n        }\r\n    }\r\n    let makeMove = function(sourceSquare, targetSquare) {\r\n        let moveObj = {from: sourceSquare, to: targetSquare, promotion: \"q\"};\r\n        let move = game.move(moveObj)\r\n        if (move == null) return false;\r\n        setBoard(game.fen());\r\n        updateGameMessagesLocal();\r\n        if (onlineGame(opponent)) {\r\n            let message = {id: gameInfo.id, move: moveObj}\r\n            socket.emit(\"chess move\", message);\r\n        }\r\n        return true;\r\n\r\n    }\r\n    let updateGameMessagesLocal = function() {\r\n        let newEndMessage = \"\"\r\n        if (game.in_check() && !onlineGame(opponent)) {\r\n            if (side != undefined) {\r\n                newEndMessage = newEndMessage.concat(`${myMove() ? \"You are\" : \"Your opponent is\"} in check!\\n`)\r\n            }\r\n            else {\r\n                newEndMessage = newEndMessage.concat(`${game.turn()==\"w\" ? \"White\" : \"Black\"} is in check!\\n`)\r\n            }\r\n\r\n        }\r\n        else if (!game.in_check() && !onlineGame(opponent)) {\r\n            setEndMessage(\"\");\r\n        }\r\n        console.log(game.in_check());\r\n        if (game.game_over() && !onlineGame(opponent)) {\r\n            newEndMessage = newEndMessage.concat(\"Game Over!\")\r\n        }\r\n        setEndMessage(newEndMessage);\r\n\r\n    }\r\n\r\n    function onDrop({sourceSquare, targetSquare}) {\r\n        if ((side == \"white\" && game.turn() == \"b\") || (side == \"black\" && game.turn() == \"w\")) {\r\n            return;\r\n        }\r\n        if (makeMove(sourceSquare, targetSquare)) {\r\n            if (opponent == \"AI (3000)\") {\r\n                recMove();\r\n            }\r\n            else if (opponent == \"Random (0)\") {\r\n                setTimeout(() => {makeRandomMove()}, 200);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    function sendMessage() {\r\n        socket.emit(\"message\", \"WOWOWOWOW\");\r\n    }\r\n    function updateTime() {\r\n        if (!game.game_over()) {\r\n            let curTime = Date.now()\r\n            console.log(game.turn());\r\n            if (game.turn() == \"w\") {\r\n\r\n                let newTime = time.white - (curTime - prevTime);\r\n                time = {white: newTime, black: time.black}\r\n                setTime(() => {return {white: newTime, black: time.black}})\r\n            }\r\n            else {\r\n                let newTime = time.black - (curTime - prevTime);\r\n                time = {white: time.white, black: newTime}\r\n                setTime({white: time.white, black: newTime});\r\n            }\r\n            prevTime = curTime;\r\n            //setInterval(() => {updateTime()}, 1000);\r\n        }\r\n    }\r\n    function getMinSec(mills) {\r\n        if (mills < 0) {\r\n            return \"Out of Time!\";\r\n        }\r\n        return new Date(mills).toISOString().substr(11, 8);\r\n    }\r\n    function myMove() {\r\n        return ((game.turn() == \"w\" && side == \"white\") || (game.turn() == \"b\" && side == \"black\") || (game.turn() == \"w\" && side == \"\"));\r\n    }\r\n    return (\r\n        <div className={\"container\"}>\r\n            <div className={\"columns is-centered\"}>\r\n                <div className={\"column is-desktop is-half\"}>\r\n                    <h5 className={\"title is-5\"}>{opponent}</h5>\r\n                    <Chessboard onSquareClick={handleClick} transitionDuration = {0} position = {board} onDrop = {onDrop} orientation = {side} className={\"centered\"}/>\r\n                    <br></br>\r\n                    <p className={\"title is-5\"}>{(userInfo.loggedIn) ? `${userInfo.username} (${userInfo.elo})` : \"Guest (1000?)\"}</p>\r\n                    {(opponent == \"\" || opponent == \"AI (3000)\" || opponent == \"Random (0)\") ? <button className={\"button\"} onClick={() => {\r\n                        setBoard(\"start\");\r\n                        setGame(new Chess());\r\n                        setEndMessage(\"\");\r\n                    }}>Reset</button> : <React.Fragment></React.Fragment>}\r\n                    {onlineGame(opponent) ? <div><p className={myMove() ? \"\" : \"bolded\"}>{`Opponent: ${getMinSec((side == \"white\") ? time.black: time.white)}`}</p>\r\n                            <p className={myMove() ? \"bolded\" : \"\"}>{`You: ${getMinSec((side == \"white\") ? time.white: time.black)}`}</p></div>\r\n                         : <React.Fragment></React.Fragment>}\r\n                    <div className={\"container\"}>\r\n                        <p className={\"title is-5 wNewLine\"}>{endMessage}</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import * as Chess from \"../../node_modules/chess.js/chess\"\r\nimport React, {useState, useEffect} from 'react';\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\n//import \"../node_modules/bulma/css/bulma.css\"\r\nimport {domain} from \"../variables/domain\";\r\n\r\nexport default function Leaderboard() {\r\n    const [leaders, setLeaders] = useState([]);\r\n    let getLeaders = async function() {\r\n        try {\r\n            const result = await axios({\r\n                method: \"get\",\r\n                url: `${domain}/leaderboard`,\r\n                withCredentials: true\r\n            });\r\n            if (result.data != undefined) {\r\n                setLeaders(result.data);\r\n            }\r\n        }\r\n        catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getLeaders().then();\r\n    }, [])\r\n    return (\r\n        <div className={\"container\"}>\r\n            <div className={\"columns is-centered\"}>\r\n                <div className={\"column is-narrow\"}>\r\n                    <div className={\"center\"}>\r\n                        <table className={\"table center\"}>\r\n                            <thead>\r\n                            <tr>\r\n                                <th><abbr title={\"Position\"}>Pos</abbr></th>\r\n                                <th>Username</th>\r\n                                <th>Elo</th>\r\n                                <th>Wins</th>\r\n                                <th>Losses</th>\r\n                                <th>Draws</th>\r\n                            </tr>\r\n                            {leaders.sort(function(a, b) {\r\n                                return b.elo - a.elo;\r\n                            }).map((user, index) => (\r\n                                <tr key={user.username}>\r\n                                    <th>{index+1}</th>\r\n                                    <td>{user.username}</td>\r\n                                    <td>{user.elo}</td>\r\n                                    <td>{user.wins}</td>\r\n                                    <td>{user.losses}</td>\r\n                                    <td>{user.draws}</td>\r\n                                </tr>\r\n                            ))}\r\n                            </thead>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport \"../App.css\";\r\nimport {domain} from \"../variables/domain\";\r\n\r\nexport default function LoginPage({info, setInfo}) {\r\n    //testAcc has password abcde\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    function onUserChange(event) {\r\n        setUsername(event.target.value);\r\n    }\r\n    function onPasswordChange(event) {\r\n        setPassword(event.target.value);\r\n    }\r\n    async function sendLoginRequest() {\r\n        try {\r\n            const result = await axios({\r\n                method: \"post\",\r\n                url: `${domain}/api/auth/register_login`,\r\n                data: {\r\n                    username: username,\r\n                    password: password\r\n                },\r\n                withCredentials: true\r\n            });\r\n            console.log(result);\r\n            setInfo({loggedIn: true, username: username})\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            // eslint-disable-next-line no-restricted-globals\r\n            //location.reload();\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n    if (!info.loggedIn) {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <div className={\"columns\"}>\r\n                    <div className={\"column is-narrow-desktop is-centered\"}>\r\n                        <div className={\"field\"}>\r\n                            <input type={\"text\"} className = {\"input\"} placeholder={\"Username\"} onChange={onUserChange} value={username}/>\r\n                            <input type={\"password\"} className={\"input\"} placeholder={\"Password\"} onChange={onPasswordChange} value={password}/>\r\n                            <button onClick={sendLoginRequest} className={\"button\"}>Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <p className={\"center\"}>You have successfully logged in as {info.username}</p>\r\n        )\r\n    }\r\n\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport {socket} from \"../variables/socket.js\"\r\nimport {domain} from \"../variables/domain\";\r\n\r\nexport default function ProfilePage() {\r\n    const [profile, setProfile] = useState({});\r\n    let getProfile = async function() {\r\n        console.log(\"Finding profile\");\r\n        try {\r\n            const result = await axios({\r\n                method: \"get\",\r\n                url: `${domain}/api/auth/profile`,\r\n                withCredentials: true\r\n            });\r\n            if (result.data != undefined) {\r\n                setProfile(result.data);\r\n            }\r\n            console.log(result.data)\r\n        }\r\n        catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getProfile().then();\r\n    }, []);\r\n    if (profile != undefined && JSON.stringify(profile) != \"{}\" && JSON.stringify(profile) != \"\\\"\\\"\") {\r\n        console.log(JSON.stringify(profile));\r\n        console.log(\"This is \")\r\n        return (\r\n            <div className={\"centered\"}>\r\n                <p className={\"title is-3\"}>{profile.username}</p>\r\n                <p className={\"title is-5\"}>{`Record: ${profile.stats.wins}-${profile.stats.losses}-${profile.stats.draws}`}</p>\r\n                <p className={\"title is-5\"}>{`Elo: ${profile.stats.elo}`}</p>\r\n            </div>\r\n\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <p></p>\r\n        )\r\n    }\r\n\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport {socket} from \"../variables/socket.js\"\r\n//import {Center} from \"chakra-ui\";\r\nimport ChessboardHandler from \"./ChessboardHandler\";\r\nimport \"../App.css\"\r\n\r\nexport default function QueuePage({userInfo}) {\r\n    const [info, setInfo] = useState({name: \"Loading...\", elo: 1000});\r\n    const [disp, setDisp] = useState(\"\");\r\n    async function enterQueue() {\r\n        let status = \"\";\r\n        await socket.emit(\"queue\", (response) => {\r\n            if (response.status == \"ok\") {\r\n                setDisp(\"queuing\");\r\n            } // ok\r\n        });\r\n\r\n    }\r\n    async function exitQueue() {\r\n        let status = \"\";\r\n        await socket.emit(\"exit queue\", (response) => {\r\n            if (response.status == \"ok\") {\r\n                setDisp(\"\");\r\n            } // ok\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        socket.on(\"game start\", (res) => {\r\n            setInfo(res);\r\n            setDisp(\"game\");\r\n        });\r\n    }, [])\r\n    //Response format: {side: \"white\" or \"black\", opponent: name and elo}\r\n    if (!userInfo.loggedIn) {\r\n        return (\r\n            <p>Not logged in!</p>\r\n        )\r\n    }\r\n    else if (disp == \"\") {\r\n        return (\r\n                <div className={\"container\"}>\r\n                    <div className={\"columns is-centered\"}>\r\n                        <div className={\"column is-narrow\"}>\r\n                            <button onClick = {enterQueue} className={\"button center\"}>Start queueing</button>\r\n                        </div>\r\n                    </div>\r\n                    <p className={\"center\"}>You may need to reload for this button to work.</p>\r\n                </div>\r\n        )\r\n    }\r\n    else if (disp == \"queuing\") {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <div className={\"columns is-centered\"}>\r\n                    <div className={\"column is-narrow\"}>\r\n                        <button onClick = {exitQueue} className={\"button\"}>Stop queueing</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    else if (disp == \"game\") {\r\n        return (\r\n            <ChessboardHandler opponent={`${info.name} (${info.elo})`} side = {info.side} userInfo={userInfo} gameInfo={{id: info.id, time: info.time}}/>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <p>You shouldn't see this</p>\r\n        )\r\n    }\r\n}","import * as Chess from \"../../node_modules/chess.js/chess\"\r\nimport React, {useState, useEffect} from 'react';\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport {socket} from \"../variables/socket.js\"\r\n\r\nimport '../App.css';\r\n\r\nexport default function Homepage() {\r\n    return (\r\n        <div className={\"container\"}>\r\n            <div className={\"columns\"}>\r\n                <div className={\"column is-one-half-desktop is-centered\"}>\r\n                    <h1 className={\"title is-3\"}>Welcome to Chess426!</h1>\r\n                    <p>You can use most of the features of this site without logging in. Use the top bar to view the leaderboard of the best online players,\r\n                    and play chess against either yourself, an AI that makes random moves, or an AI that will almost certainly beat you every time.</p>\r\n                    <br></br>\r\n                    <p>Logging in allows you to access multiplayer games: Simply enter the multiplayer tab and start queuing to be matched using a \"matchmaking system\"\r\n                        that matches you with the next person to start queuing. Don't expect your rating to have anything to do with the skill of your opponent.\r\n                    Note that logging in and registering use the same form</p>\r\n                    <br></br>\r\n                    <p>This website uses an elo system to handle your ranking, so this isn't as bad as it seems; If you lose to a superior opponent, you will lose less points\r\n                    than if you lose to an inferior one. This helps to reduce the impact of mismatched games on your overall rating, though wins and losses update the same way\r\n                    regardless of the ranking of your opponent.</p>\r\n                    <br></br>\r\n                    <p>If you get stuck, try reloading the page. It usually fixes the problem.</p>\r\n                    <br></br>\r\n                    <p className={\"title is-4\"}>Libraries used:</p>\r\n                    <b>Client Side:</b>\r\n                    <div className={\"container\"}>\r\n                        <ul className={\"\"}>\r\n                            <li>React</li>\r\n                            <li>React-Router</li>\r\n                            <li>Chess.js</li>\r\n                            <li>Chessboard.jsx</li>\r\n                            <li>Axios</li>\r\n                            <li>Bulma</li>\r\n                        </ul>\r\n                    </div>\r\n                    <br></br>\r\n                    <b>Server Side:</b>\r\n                    <div className={\"container\"}>\r\n                        <ul className={\"\"}>\r\n                            <li>Node.js</li>\r\n                            <li>Express.js</li>\r\n                            <li>Express-session</li>\r\n                            <li>Passport.js</li>\r\n                            <li>Socket.io</li>\r\n                            <li>MongoDB</li>\r\n                        </ul>\r\n                    </div>\r\n                    <br></br>\r\n                    <b>AJAX APIs:</b>\r\n                    <br></br>\r\n                    <a href={\"https://github.com/albertputrapurnama/stockfish-api\"}>Stockfish-API</a>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Chessboard from \"chessboardjsx\";\nimport ChessboardHandler from \"./components/ChessboardHandler\"\n//import \"../node_modules/bulmaswatch/cyborg/bulmaswatch.min.css\"\nimport \"../node_modules/bulma/css/bulma.css\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport LoginPage from \"./components/LoginPage\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport axios from \"axios\";\nimport React, {useState, useEffect} from 'react';\nimport QueuePage from \"./components/QueuePage\";\nimport Homepage from \"./components/Homepage\";\nimport {domain} from \"./variables/domain\";\nfunction App() {\n    //https://reactrouter.com/web/api/Route/component for keeping chessboard state\n    const [userInfo, setUserInfo] = useState({loggedIn: false, username: \"\", elo: 1000})\n    let getProfile = async function() {\n        try {\n            const result = await axios({\n                method: \"get\",\n                url: `${domain}/api/auth/profile`,\n                withCredentials: true\n            });\n            if (result.data != \"\") {\n                setUserInfo({loggedIn: true, username: result.data.username, elo: result.data.stats.elo});\n            }\n            console.log(result.data);\n        }\n        catch(err) {\n        }\n    }\n    let logOut = async function() {\n        //document.getElementById(\"bulmaUrl\").innerHTML = '<link rel=\"stylesheet\" id=\"bulmaUrl\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css\">'\n        try {\n            const result = await axios({\n                method: \"get\",\n                url: `${domain}/api/auth/logout`,\n                withCredentials: true\n            });\n            setUserInfo({loggedIn: false, username: \"\"});\n        }\n        catch(e){\n\n        }\n\n    }\n    useEffect(() => {getProfile().then()}, [])\n    return (\n      <Router>\n          <nav className={\"navbar\"}>\n              <div className={\"navbar-menu\"}>\n                  <a className={\"navbar-item\"}>\n                      <Link to={\"/\"}>Home</Link>\n                  </a>\n                  <a className={\"navbar-item\"}>\n                      <Link to={\"/leaderboard\"}>Leaderboard</Link>\n                  </a>\n                  <a className={\"navbar-item\"}>\n                      <Link to={\"/board\"}>Local Game</Link>\n                  </a>\n\n                  <a className={\"navbar-item\"}>\n                      <Link to={\"/boardai\"}>Play vs. AI (Good Luck!)</Link>\n                  </a>\n                  <a className={\"navbar-item\"}>\n                      <Link to={\"/boardrandom\"}>Play vs. AI (Random Moves)</Link>\n                  </a>\n                  <a className={\"navbar-item\"}>\n                      <Link to={\"/profile\"}>Profile</Link>\n                  </a>\n                  <a className={\"navbar-item\"}>\n                      <Link to={\"/multiplayer\"}>Multiplayer</Link>\n                  </a>\n              </div>\n              <div className={\"navbar-end\"}>\n                  <div className={\"navbar-item\"}>\n                      <p>{userInfo.username}</p>\n                  </div>\n                  <div className={\"navbar-item\"}>\n                      <button className={\"button\"} onClick={logOut}>Log Out</button>\n                  </div>\n                  <div className={\"navbar-item\"}>\n                      <Link to={\"/login\"}><button className={\"button\"}>Login</button></Link>\n                  </div>\n              </div>\n          </nav>\n          <hr></hr>\n        <Switch>\n            <Route exact path = \"/\">\n                <Homepage/>\n            </Route>\n            <Route path={\"/board\"} component={() => <ChessboardHandler opponent={\"\"} userInfo={userInfo}/>}>\n\n            </Route>\n            <Route path={\"/leaderboard\"}>\n                <Leaderboard/>\n            </Route>\n            <Route path={\"/boardai\"} component={() => <ChessboardHandler opponent={\"AI (3000)\"} side={\"white\"} userInfo={userInfo}/>}>\n\n            </Route>\n            <Route path={\"/boardrandom\"} component={() => <ChessboardHandler opponent={\"Random (0)\"} side={\"white\"} userInfo={userInfo}/>}>\n            </Route>\n\n            <Route path={\"/login\"}>\n                <LoginPage info = {userInfo} setInfo = {setUserInfo}/>\n            </Route>\n\n            <Route path={\"/profile\"}>\n                <ProfilePage/>\n            </Route>\n\n            <Route path={\"/multiplayer\"}>\n                <QueuePage userInfo={userInfo}/>\n            </Route>\n\n        </Switch>\n      </Router>\n  );\n}\n/*function ProfileName() {\n    const [name, setName] = useState({});\n    let getProfile = async function() {\n        try {\n            const result = await axios({\n                method: \"get\",\n                url: \"http://localhost:8000/api/auth/profile\",\n                withCredentials: true\n            });\n            if (result.data != undefined) {\n                setName(result.data);\n            }\n        }\n        catch(err) {\n        }\n    }\n    useEffect(() => {\n        getProfile().then();\n    }, []);\n    return (\n        <p>{name.username}</p>\n    );\n}*/\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}